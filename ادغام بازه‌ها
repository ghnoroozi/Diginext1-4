def merge_intervals(intervals):
    if not intervals:
        return []

    # مرتب‌سازی بازه‌ها بر اساس نقطه شروع آنها
    intervals.sort(key=lambda x: x[0])

    merged = []
    for interval in intervals:
        # اگر لیست merged خالی است یا بازه جاری با بازه قبلی هم‌پوشانی ندارد، بازه جاری را اضافه می‌کنیم
        if not merged or merged[-1][1] < interval[0]:
            merged.append(interval)
        else:
            # در غیر این صورت، بازه‌ها هم‌پوشانی دارند و باید ادغام شوند
            merged[-1][1] = max(merged[-1][1], interval[1])

    return merged

مرتب‌سازی بازه‌ها: بازه‌ها را بر اساس نقطه شروع آنها مرتب می‌کنیم. این کار با استفاده از تابع sort و کلید lambda x: x[0] انجام می‌شود.
پیمایش و ادغام بازه‌ها:
اگر لیست merged خالی باشد یا بازه جاری با بازه قبلی هم‌پوشانی نداشته باشد، بازه جاری را به لیست merged اضافه می‌کنیم.
اگر بازه جاری با بازه قبلی هم‌پوشانی داشته باشد، دو بازه را ادغام می‌کنیم و پایان بازه قبلی را به بیشترین مقدار پایان دو بازه تغییر می‌دهیم.
